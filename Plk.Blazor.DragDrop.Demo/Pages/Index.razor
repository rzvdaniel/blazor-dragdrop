@page "/"
@using Plk.Blazor.DragDrop.Demo.Components
@using Plk.Blazor.DragDrop.Demo.Data

<div id="main" class="container-fluid">

    <Tree @ref="tree"
          ShowIcon DataSource="treeGames"
          Multiple="@multiple"
          TitleExpression="x => x.DataItem.Text"
          ChildrenExpression="x => x.DataItem.Items"
          IconExpression="x => x.DataItem.Icon"
          IsLeafExpression="x => x.DataItem.Items?.Count == 0"
          KeyExpression="x => x.DataItem.Id"
          DraggableExpression="x => x.DataItem.Draggable"
          Draggable="true"
          @bind-SelectedKey="@selectedKey"
          @bind-SelectedData="@selectedData"
          @bind-SelectedNode="@selectedNode"
          @bind-SelectedKeys="@selectedKeys"
          OnNodeDrag="@((i)=>
            {
                dropzone.ActiveItem = new GameElement(i.Id, i.Text, i.Icon);
            })"
          TItem="GameElement">
    </Tree>

    <hr />

    <Dropzone Items="games" @ref="dropzone">
        <Game OnRemoveClick="(item)=>games.Remove(item)" Item="@context"></Game>
    </Dropzone>

</div>

@code{

        private bool multiple;

        Tree<GameElement> tree;
        Dropzone<GameElement> dropzone;

        protected override void OnInitialized()
        {
            base.OnInitialized();
        }

        string selectedKey;

        GameElement selectedData;

        TreeNode<GameElement> selectedNode;

        string[] selectedKeys;


        List<GameElement> treeGames = new List<GameElement>()
    {
        new ("100","XBox","windows")
        {
            Items=new List<GameElement>()
{
                new ("101","Halo"),
                 new ("102","Gears of War"),
                 new ("103","Forza Motosport")
            }
        }
    };

        List<GameElement> games = new List<GameElement>()
    {
        new ("100","XBox","windows")
    };
}
